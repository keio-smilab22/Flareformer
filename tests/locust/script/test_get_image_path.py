from locust import HttpUser, task, constant
import json
import random


date_list = ["2010-09-24T03:00:00.000Z",
            "2017-04-30T19:00:00.000Z",
            "2013-09-15T12:00:00.000Z",
            "2011-06-20T16:00:00.000Z",
            "2011-07-24T11:00:00.000Z",
            "2011-04-29T15:00:00.000Z",
            "2014-01-08T19:00:00.000Z",
            "2011-03-26T16:00:00.000Z",
            "2013-04-16T02:00:00.000Z",
            "2013-04-03T04:00:00.000Z",
            "2011-02-13T11:00:00.000Z",
            "2015-06-24T15:00:00.000Z",
            "2011-05-04T17:00:00.000Z",
            "2013-08-22T04:00:00.000Z",
            "2016-03-28T10:00:00.000Z",
            "2017-12-17T01:00:00.000Z",
            "2014-12-28T08:00:00.000Z",
            "2010-11-11T09:00:00.000Z",
            "2016-04-04T17:00:00.000Z",
            "2015-05-14T01:00:00.000Z",
            "2010-12-03T16:00:00.000Z",
            "2013-07-07T08:00:00.000Z",
            "2017-03-07T11:00:00.000Z",
            "2014-02-20T17:00:00.000Z",
            "2016-03-28T06:00:00.000Z",
            "2012-11-13T13:00:00.000Z",
            "2012-11-13T13:00:00.000Z",
            "2012-11-06T06:00:00.000Z",
            "2014-09-20T05:00:00.000Z",
            "2016-04-19T16:00:00.000Z",
            "2016-04-19T16:00:00.000Z",
            "2012-10-09T06:00:00.000Z",
            "2015-08-20T01:00:00.000Z",
            "2013-10-05T06:00:00.000Z",
            "2017-10-31T15:00:00.000Z",
            "2016-07-18T10:00:00.000Z",
            "2014-06-04T15:00:00.000Z",
            "2012-07-31T15:00:00.000Z",
            "2015-04-23T19:00:00.000Z",
            "2012-05-20T04:00:00.000Z",
            "2010-06-25T14:00:00.000Z",
            "2015-11-20T14:00:00.000Z",
            "2013-07-22T07:00:00.000Z",
            "2010-11-26T11:00:00.000Z",
            "2012-02-26T16:00:00.000Z",
            "2011-02-01T16:00:00.000Z",
            "2013-12-07T18:00:00.000Z",
            "2013-12-07T18:00:00.000Z",
            "2016-08-16T03:00:00.000Z",
            "2017-11-08T13:00:00.000Z"]

class WebsiteUser(HttpUser):
    wait_time = constant(60)

    @task
    def test_get_image_path(self):        
        rand_dates = random.choice(date_list)
        with self.client.get(f"/images/path?date={rand_dates}", catch_response=True) as response:
            content = json.loads(response.content.decode())
            print(content["get_image_status"])
            if content["get_image_status"] == "failed":
                response.failure("get image status is failed")
            elif response.status_code != 200:
                response.failure("statusCode is not 200")
