[tool.poetry]
name = "flareformer"
version = "0.1.0"
description = "Flareformer: Large-scale Solar Flare Prediction by Integrating Magnetograms and Sunspot Physical Features"
authors = ["Your Name <you@example.com>"]
license = "BSD-3-Clause-Clear license"
readme = "README.md"

[tool.poetry.dependencies]
python = "=3.8.10"
torch = { url = "https://download.pytorch.org/whl/lts/1.8/cu111/torch-1.8.2%2Bcu111-cp38-cp38-linux_x86_64.whl" }
torchaudio = { url = "https://download.pytorch.org/whl/lts/1.8/torchaudio-0.8.2-cp38-cp38-linux_x86_64.whl" }
torchvision = { url = "https://download.pytorch.org/whl/lts/1.8/cu111/torchvision-0.9.2%2Bcu111-cp38-cp38-linux_x86_64.whl" }
torchinfo = "1.6.3"
torchsummary = "1.5.1"
colored_traceback = "^0.3.0"
fastapi = "^0.79.1"
matplotlib = "^3.5.1"
numpy = "^1.22.3"
opencv-python = "^4.5.5.64"
Pillow = "^9.0.1"
ray = "^1.12.1"
scikit-image = "^0.19.2"
scikit-learn = "^1.0.2"
scipy = "^1.8.0"
sklearn = "^0.0"
timm = "^0.5.4"
tqdm = "^4.63.0"
protobuf = "^3.19.4"
python-multipart = "^0.0.5"
uvicorn = "^0.18.2"
wandb = "^0.12.11"
pandas = "^1.5.2"

[tool.poetry.group.dev.dependencies]
pytest-cov = "^3.0.0"
black = "^22.3.0"
isort = "^5.10.1"
flake8 = "^4.0.1"
flake8-docstrings = "^1.6.0"
mypy = "^0.950"
locust = "^2.12.2"


[tool.black]
line-length = 119

[tool.isort]
profile = "black"
line_length = 119

[tool.mypy]
python_version = 3.8
# following setting is same as pysen
# https://github.com/pfnet/pysen/blob/main/setup.cfg#L12
check_untyped_defs = true
disallow_any_decorated = false
disallow_any_generics = false
disallow_any_unimported = false
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
